# vi: ft=ruby

opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.94.1"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    ENV["FASTLANE_XCODE_LIST_TIMEOUT"] = 60

    # increment_build_number
  end

  desc "Runs all the tests"
  lane :test do
    scan(scheme: "Kraftstoff")
    snapshot
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    scan(scheme: "Kraftstoff")
    increment_build_number
    # sigh
    gym(scheme: "Kraftstoff", configuration: "Release")
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the App Store"
  lane :deploy do
    scan(scheme: "Kraftstoff")
    snapshot
    increment_build_number
    # sigh
    gym(scheme: "Kraftstoff", configuration: "Release")
    deliver(force: true)
    # frameit

    add_git_tag tag: version_number
  end

  desc "Increment the app version major"
  lane :bumpMajor do
    increment_version_number(bump_type: "major")
  end
  
  desc "Increment the app version minor"
  lane :bumpMinor do
    increment_version_number(bump_type: "minor")
  end

  desc "Increment the app version patch"
  lane :bumpPatch do
    increment_version_number(bump_type: "patch")
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end
